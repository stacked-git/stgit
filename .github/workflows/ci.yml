name: CI

on:
  push:
    branches: [ master ]
    tags: [ '*' ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: git fetch --prune --unshallow origin +refs/tags/*:refs/tags/*
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Build
      run: |
        python setup.py sdist
    - name: Upload dist
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: "dist/*"

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: git fetch --prune --unshallow origin +refs/tags/*:refs/tags/*
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install asciidoc asciidoctor docbook-xsl-ns xmlto
    - name: Build Docs Asciidoc
      run: |
        make -j2 -C Documentation
    - name: Build Docs Asciidoctor
      run: |
        make -j2 -C Documentation USE_ASCIIDOCTOR=1
    - name: Install HTML Docs
      run: |
        make -j2 -C Documentation USE_ASCIIDOCTOR=1 htmldir="$GITHUB_WORKSPACE"/stgit-html install-html
    - name: Upload HTML Docs
      uses: actions/upload-artifact@v2
      with:
        name: html-doc
        path: ${{ github.workspace }}/stgit-html

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - '3.5'
          - '3.6'
          - '3.7'
          - '3.8'
          - '3.9'
          - 'pypy3'
    steps:
    - uses: actions/checkout@v2
    - run: git fetch --prune --unshallow origin +refs/tags/*:refs/tags/*
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get install quilt gnupg2
    - name: Test
      env:
        DEFAULT_TEST_TARGET: "prove"
        STG_PROVE_OPTS: "--jobs=2"
        STG_TEST_OPTS: "--verbose-log"
      run: |
        timeout 1000s make test

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: git fetch --prune --unshallow origin +refs/tags/*:refs/tags/*
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install -U pip
        python -m pip install black flake8 isort
    - name: lint-black
      run: make lint-black
    - name: lint-isort
      run: make lint-isort
    - name: lint-flake8
      run: make lint-flake8
    - name: lint-t
      run: make lint-t

  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: git fetch --prune --unshallow origin +refs/tags/*:refs/tags/*
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install -U pip
        python -m pip install coverage[toml] coveralls
        sudo apt-get install quilt gnupg2
    - name: Coverage Test
      run: |
        timeout 1000s make -j2 coverage-test

    - name: Coverage Report
      run: |
        make coverage-report

    - name: Upload HTML Report
      uses: actions/upload-artifact@v2
      with:
        name: htmlcov
        path: "htmlcov/"

    - name: Coveralls
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      run: |
        if [ -n "$COVERALLS_REPO_TOKEN" ]
        then
            python -m coveralls
        else
            echo "Missing COVERALLS_REPO_TOKEN secret. Not uploading to coveralls.io."
        fi
